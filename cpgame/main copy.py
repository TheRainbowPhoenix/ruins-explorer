# main.py
# The main entry point for the entire game. Clean and simple.
import gc
import gint

import sys
gc.collect()
free_mem = gc.mem_free()
alloc_mem = gc.mem_alloc()
txt = "{} / {}".format(alloc_mem,free_mem)
print(txt)

# from gint import dclear, dtext, dupdate, C_WHITE, C_BLACK, DWIDTH, DHEIGHT, image, dimage, dsize

print("Before profiler")
gc.collect()
free_mem = gc.mem_free()
alloc_mem = gc.mem_alloc()
txt = "{} / {}".format(alloc_mem,free_mem)
print(txt)


print("Before splash")
gc.collect()
free_mem = gc.mem_free()
alloc_mem = gc.mem_alloc()
txt = "{} / {}".format(alloc_mem,free_mem)
print(txt)

gint.dclear(gint.C_WHITE)
msg = "LOADING..."
sz = gint.dsize(msg, None)[0]
gint.dtext(gint.DWIDTH-sz-8, gint.DHEIGHT-26, gint.C_BLACK, msg)
gint.dimage(gint.DWIDTH-sz-40, gint.DHEIGHT-42, gint.image(4, 17, 25, 39, 25, b'\x80\x80\x80\x80\x90\x90\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x90\x90\x80\x80\x80\x80\x80\x80\x80\x90\x8f\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x8f\x8f\x90\x80\x80\x80\x80\x80\x80\x80\x90\x8f\x8f\x90\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x90\x8f\x90\x90\x90\x80\x80\x80\x80\x80\x80\x90\x90\x8e\x8e\x90\x80\x8f\x8f\x8f\x8f\x8f\x8f\x80\x8f\x8e\x8f\x90\x90\x90\x80\x80\x80\x80\x80\x8f\x90\x90\x8e\x8e\x8e\x8f\x8f\x8e\x8e\x8e\x8e\x8f\x8f\x8e\x8e\x8e\x90\x90\x8f\x8f\x80\x80\x80\x80\x90\x8f\x8a\x90\x8f\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8f\x8e\x8a\x90\x8e\x90\x80\x80\x80\x80\x90\x85\x8a\x8b\x8f\x8e\x8f\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x85\x8a\x85\x90\x80\x80\x80\x80\x90\x8a\x90\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8e\x8f\x8a\x85\x8f\x80\x80\x80\x80\x80\x8f\x8e\x89\x8e\x8e\x8e\x8f\x8e\x8e\x8e\x8e\x8f\x8e\x8e\x88\x89\x8e\x8f\x8f\x80\x80\x80\x80\x80\x8f\x8f\x8e\x89\x89\x8e\x8e\x8f\x88\x8e\x8f\x89\x8f\x8e\x89\x89\x89\x8e\x8f\x8f\x8f\x80\x80\x80\x80\x90\x8f\x8e\x8e\x8e\x8e\x8f\x8f\x8e\x88\x8e\x8e\x8f\x8e\x8e\x8e\x8e\x8e\x8f\x8f\x8f\x80\x80\x80\x80\x90\x8e\x8e\x8e\x8e\x8f\x8f\x8f\x8e\x8e\x8e\x8e\x90\x8f\x8e\x8e\x8e\x8e\x8f\x8e\x8f\x80\x80\x80\x8f\x8f\x8e\x8e\x8e\x8e\x8f\x90\x83\x8f\x8e\x8e\x8e\x82\x90\x8f\x8f\x8e\x8e\x8e\x8e\x8f\x8f\x90\x90\x8e\x8e\x8e\x8f\x8e\x8f\x8f\x8f\x8f\x8f\x8e\x8e\x8e\x8f\x8f\x8f\x8f\x8f\x8f\x8f\x8e\x8e\x8f\x80\x80\x8f\x8f\x8f\x8f\x8f\x8f\x83\x83\x83\x82\x8f\x8e\x86\x83\x83\x83\x90\x8f\x8f\x8f\x8f\x8f\x80\x80\x80\x80\x8f\x8f\x8f\x8f\x8f\x90\x90\x90\x82\x8f\x8f\x83\x90\x90\x90\x8f\x8f\x8f\x8f\x8f\x90\x80\x80\x80\x80\x8f\x90\x8e\x8f\x8f\x87\x87\x90\x82\x82\x82\x82\x90\x87\x87\x90\x8f\x8e\x8f\x8f\x90\x80\x80\x80\x80\x8f\x90\x8e\x8e\x8f\x87\x84\x90\x82\x82\x82\x82\x90\x84\x87\x90\x8f\x8e\x8f\x8f\x90\x80\x80\x80\x8f\x8f\x90\x8e\x8e\x8f\x81\x81\x90\x82\x82\x82\x82\x8f\x81\x81\x90\x8f\x8e\x8f\x8f\x90\x80\x80\x80\x8f\x8f\x90\x8e\x8e\x8f\x86\x82\x82\x82\x82\x82\x82\x82\x82\x83\x90\x8f\x8e\x8f\x8f\x90\x80\x80\x8f\x8e\x8f\x8f\x8e\x8e\x8e\x90\x83\x82\x82\x83\x83\x82\x83\x83\x88\x8e\x8f\x8e\x8f\x8f\x8f\x80\x80\x8f\x8e\x8f\x8f\x8f\x8f\x8e\x8f\x90\x83\x83\x83\x83\x83\x83\x90\x8f\x8e\x8e\x8f\x8f\x8f\x8f\x80\x80\x8f\x8e\x8f\x8e\x8f\x8e\x8e\x90\x8e\x8f\x8e\x8e\x8e\x8e\x8f\x8f\x8f\x8e\x8e\x8f\x8f\x8f\x8f\x80\x80\x8f\x8f\x8f\x8f\x8f\x8f\x8f\x90\x86\x8c\x83\x86\x83\x89\x8d\x83\x89\x8f\x8f\x8f\x8f\x8f\x8f\x80\x80\x90\x8f\x8f\x8f\x8f\x8d\x8d\x8f\x88\x86\x83\x83\x83\x83\x89\x8c\x8e\x8f\x8f\x8b\x8f\x8f\x8f\x80\x80\x8f\x8f\x8f\x90\x8b\x8b\x8f\x8f\x8d\x86\x86\x83\x86\x83\x86\x8d\x8d\x8c\x8b\x8f\x90\x8f\x8f\x80\x80\x80\x8f\x8f\x90\x8b\x8b\x8f\x90\x8b\x8d\x8b\x8d\x83\x8c\x8d\x8b\x8b\x8b\x8b\x8b\x90\x8f\x8f\x80\x80\x80\x8f\x8f\x8d\x8d\x8d\x8f\x90\x8b\x8b\x8c\x8d\x86\x8c\x8c\x8b\x8b\x8b\x8f\x8d\x90\x8f\x90\x80\x80\x80\x8f\x8f\x90\x8b\x8b\x8f\x90\x8f\x8f\x90\x8f\x90\x8f\x8f\x8f\x8f\x8e\x8f\x86\x8f\x8b\x90\x80\x80\x80\x8f\x89\x89\x8e\x8f\x90\x90\x8e\x8f\x89\x86\x86\x89\x8e\x8e\x8f\x89\x8e\x8f\x8f\x8d\x90\x80\x80\x80\x8f\x8e\x86\x90\x8f\x90\x8f\x8f\x8d\x8e\x8f\x8e\x8e\x8f\x8f\x8d\x8f\x90\x8e\x8f\x8e\x90\x80\x80\x80\x90\x8f\x83\x90\x8f\x8f\x8b\x8b\x8d\x86\x8c\x8d\x89\x8c\x8c\x8c\x8b\x8f\x83\x8f\x89\x90\x80\x80\x80\x80\x90\x90\x90\x8f\x8f\x8d\x8d\x86\x8b\x8c\x8b\x89\x8b\x8b\x8b\x8d\x8f\x83\x8e\x89\x90\x80\x80\x80\x80\x80\x90\x90\x90\x90\x8e\x89\x83\x83\x83\x8f\x8c\x86\x86\x86\x8b\x8f\x90\x90\x90\x80\x80\x80\x80\x80\x80\x80\x80\x80\x90\x8f\x8f\x8f\x90\x90\x8f\x90\x8f\x8f\x8f\x90\x90\x90\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x8f\x86\x83\x82\x86\x90\x82\x82\x86\x8f\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x8f\x83\x82\x82\x86\x90\x83\x83\x86\x90\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x8f\x83\x83\x83\x83\x90\x90\x90\x90\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x90\x90\x90\x90\x90\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80', b'\xff\xff\xe7I\xfe\x94\xe5*\xce\x83eq\xbbF|\x01r\x89jdLN\x1a\'\x12\x89\x01\x89A"\x18\x81\x00\x00'))
gint.dupdate()
del msg
del sz

print("After splash")
gc.collect()
free_mem = gc.mem_free()
alloc_mem = gc.mem_alloc()
txt = "{} / {}".format(alloc_mem,free_mem)
print(txt)

# Import data and load game

import time
from cpgame.engine.game import Game

print("After imports")
gc.collect()
free_mem = gc.mem_free()
alloc_mem = gc.mem_alloc()
txt = "{} / {}".format(alloc_mem,free_mem)
print(txt)


def main():
    """Initializes and runs the game, starting with the MenuScene."""
    print("in main")
    gc.collect()
    free_mem = gc.mem_free()
    alloc_mem = gc.mem_alloc()
    txt = "{} / {}".format(alloc_mem,free_mem)
    print(txt)

    from cpgame.engine.profiler import MemoryProfiler
    with MemoryProfiler("Game"):
        game = Game()
    # try:
    import cpgame.game_scenes.menu_scene
    game.start(cpgame.game_scenes.menu_scene.MenuScene)
    # except Exception as e:
    #     # This provides a clean crash screen on PC for easier debugging.
    #     dclear(C_WHITE)
    #     dtext(5, 5, C_BLACK, "FATAL ERROR:")
    #     # Try to print the error message line by line
    #     try:
    #         error_lines = str(e).split('\n')
    #         for i, line in enumerate(error_lines):
    #             dtext(5, 25 + i * 15, C_BLACK, line)
    #     except:
    #         dtext(5, 25, C_BLACK, "Could not display error.")
    #     dupdate()
    #     time.sleep(10)


main()